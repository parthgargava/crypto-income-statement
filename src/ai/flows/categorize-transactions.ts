// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A crypto transaction categorizer AI agent.
 *
 * - categorizeTransactions - A function that handles the transaction categorization process.
 * - CategorizeTransactionsInput - The input type for the categorizeTransactions function.
 * - CategorizeTransactionsOutput - The return type for the categorizeTransactions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TransactionSchema = z.object({
  date: z.string().describe('The date of the transaction.'),
  description: z.string().describe('The description of the transaction.'),
  amount: z.number().describe('The amount of the transaction.'),
  currency: z.string().describe('The currency of the transaction.'),
});

const CategorizeTransactionsInputSchema = z.object({
  transactions: z.array(TransactionSchema).describe('An array of crypto transactions to categorize.'),
});
export type CategorizeTransactionsInput = z.infer<
  typeof CategorizeTransactionsInputSchema
>;

const CategorizeTransactionsOutputSchema = z.object({
  categorizedTransactions: z.array(
    z.object({
      date: z.string().describe('The date of the transaction.'),
      description: z.string().describe('The description of the transaction.'),
      amount: z.number().describe('The amount of the transaction.'),
      currency: z.string().describe('The currency of the transaction.'),
      category: z
        .string()
        .describe(
          'The category of the transaction (e.g., staking rewards, airdrop, salary, trading profit, withdrawal, transfer, payment, trading loss).'
        ),
      type: z.enum(['inflow', 'outflow']).describe('The type of transaction.'),
    })
  ),
});
export type CategorizeTransactionsOutput = z.infer<
  typeof CategorizeTransactionsOutputSchema
>;

export async function categorizeTransactions(
  input: CategorizeTransactionsInput
): Promise<CategorizeTransactionsOutput> {
  return categorizeTransactionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'categorizeTransactionsPrompt',
  input: {schema: CategorizeTransactionsInputSchema},
  output: {schema: CategorizeTransactionsOutputSchema},
  prompt: `You are an expert in cryptocurrency transactions.

  Your task is to categorize a list of cryptocurrency transactions into inflows and outflows, and assign a specific category to each transaction.

  Here are the categories you can use:
  - inflows: staking rewards, airdrop, salary, trading profit
  - outflows: withdrawal, transfer, payment, trading loss

  For each transaction, consider the description and the amount to determine the most appropriate category and type (inflow or outflow).

  Transactions:
  {{#each transactions}}
  - Date: {{date}}, Description: {{description}}, Amount: {{amount}} {{currency}}
  {{/each}}`,
});

const categorizeTransactionsFlow = ai.defineFlow(
  {
    name: 'categorizeTransactionsFlow',
    inputSchema: CategorizeTransactionsInputSchema,
    outputSchema: CategorizeTransactionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
